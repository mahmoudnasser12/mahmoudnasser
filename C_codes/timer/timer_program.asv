#inclide "STD_TYPES.h"
#inclide "BIT_MATH.h"
#inclide "Timer_congig.h"
#inclide "TIMMER_register.h"
#inclide "timer_private.h"
#inclide "TIMMER_register.h"
static TIMER0_pvcallbackFunc = NULL;
void Timer0_voidinit(void){
         CLEAR_BIT(TCCR0,TCCR0_WGM00);
         CLEAR_BIT(TCCR0,TCCR0_WGM01);

         TCCR0 &=TIMER0_PRESCALER_MASK;
         TCCR0 |= TIMER0u8PRESCALER;
         TCNT0 = Preloadu8_VAL;
         SECT_BIT(TMSK,TIMSK_TOIE0);   
}

u8 Timer0_u8setcallback(void (*copy_pvcallbackfunc)(void){
    
    
    u8 Local_error_status = ok;
    if ( copy_pvcallbackfunc != NULL){
        TIMER0_pvcallbackFunc = copy_pvcallbackfunc;
    }
    else {
        
        Local_error_status = Null_ponter;
        
    }
    return Local_error_status;
       
    
}
void __vector_9(void)   __attribute(signal